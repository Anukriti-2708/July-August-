public class Solution {
    public static int frogJump(int n, int heights[]) {
      int []dp = new int[n+1];
        for(int i=0;i<=n;i++){
            dp[i]=-1;
        }
        return f(n-1,dp,heights);
       
    }
    
    public static int f(int ind,int[]dp,int[]heights){
        if(ind==0){
            
            return 0;
        }
        
        if(dp[ind]!=-1) {
            return dp[ind];
        }
        int first = f(ind-1,dp,heights) + Math.abs(heights[ind]-heights[ind-1]);
        int sec = Integer.MAX_VALUE;
     if(ind>1) sec =  f(ind-2,dp,heights)+Math.abs(heights[ind]-heights[ind-2]);
        
        dp[ind]= Math.min(first,sec);
        return dp[ind];
    }

}
