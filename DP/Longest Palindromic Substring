class Solution {
    public String longestPalindrome(String s) {
        int len = s.length();
        
        int [][] dp = new int[len][len];
        
        
        int max = 1;
        int start =0;
        int end =0;
        int k = 0;
        
        for(int i =0;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                
                 if((j+k)>=dp[0].length){
                    break;
                }
                char ch_start = s.charAt(j);
                char ch_end = s.charAt(j+k);
                
                
                
                if(ch_start == ch_end){
                    
                    if(j == j+k){
                        dp[j][j+k] = 1;
                        max = 1;
                        start = j;
                       }
                    
                    else if(j+k-1 == j){
                        dp[j][j+k] =1;
                        max = 2;
                        start =j;
                    }
                    
                    else if(dp[j+1][j+k-1] == 1) {
                        dp[j][j+k] = 1;
                        int dummy = max;
                        max = Math.max(max,k+1);
                        
                      if(dummy< max){
                        start = j;
                        end = j+k;
                        }
                        
                    }
                    else{
                        dp[j][j+k] =0;
                    }
                }
               
            }
            k++;
        }
        return s.substring(start,start+max);
        
    }
}
