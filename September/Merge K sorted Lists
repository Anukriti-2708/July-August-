/*You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6*/




class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        if(lists.length == 0) return null;
        Queue<Integer> pq = new PriorityQueue<>();
        for(ListNode list : lists){
            ListNode head = list;
            
            while(head!=null){
                pq.offer(head.val);
                head = head.next;
            }
        }
            
            if(pq.isEmpty()) return null;
            
            ListNode ans = new ListNode(pq.poll());
            ListNode head = ans;
            
            while(!pq.isEmpty()){
                head.next = new ListNode(pq.poll());
                head = head.next;
            }
            
        
        return ans;
        
    }
}
